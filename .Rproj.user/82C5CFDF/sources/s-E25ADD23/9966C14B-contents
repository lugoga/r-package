# Final 

R packages provide a convenient and standardized mechanism for distributing R code to a wide audience. As part of building an R package you design an interface to a collection of functions that users can access to make use of the functionality you provide. R packages are directories containing R code, documentation files, package metadata, and export/import information. Exported functions are functions that are accessible by the user; imported functions are functions in other packages that are used by your package.

```{r setup5, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
```

We just scratch the surface on how one can start developing R packages. I hope you feel empowered to start developing your own packages now! We went through many of these steps one time only; however, in the development process, some of these steps are iterative. Table \@ref(tab:tab51)  highlight key steps we went together and it can be used as reference material when you get entangled along the stage, then table \@ref(tab:tab51) can resourceful.


```{r tab51, echo=FALSE, warning=FALSE, message=FALSE, comment=""}

require(magrittr)
readr::read_csv("summary_table.csv") %>% knitr::kable(caption = "Key functions in sequantial order during package developmnent")
```

